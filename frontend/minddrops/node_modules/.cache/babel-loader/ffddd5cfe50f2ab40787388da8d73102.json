{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/xinchen/Documents/2. Learning/4. Cornell/1. Courses/Spring 2021/Startup Systems/minddrops/frontend/minddrops/src/components/Navbar/Navbar_Page.js\";\nimport React, { Component } from \"react\";\nimport { Navbar, Nav, NavbarBrand, NavbarToggler, NavItem, NavLink, Container, Collapse, Button } from \"reactstrap\";\nimport ScrollspyNav from \"./scrollSpy\";\nimport { useHistory } from 'react-router-dom'; //stickey header\n\nimport \"react-sticky-header/styles.css\";\nimport StickyHeader from \"react-sticky-header\";\n\nclass NavbarPage extends Component {\n  constructor(props) {\n    var _s = $RefreshSig$();\n\n    super(props);\n    this.routeChange = _s(() => {\n      _s();\n\n      let path = 'login';\n      let history = useHistory();\n      history.push(path);\n    }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n      return [useHistory];\n    });\n\n    this.toggle = () => {\n      this.setState({\n        isOpenMenu: !this.state.isOpenMenu\n      });\n    };\n\n    this.state = {\n      isOpenMenu: false\n    };\n  }\n\n  render() {\n    //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\n    let targetId = this.props.navItems.map(item => {\n      return item.idnm;\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StickyHeader, {\n        header: /*#__PURE__*/_jsxDEV(Navbar, {\n          expand: \"lg\",\n          fixed: \"top\",\n          className: \"navbar-custom sticky sticky-dark \" + this.props.navClass,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n              className: \"logo text-uppercase\",\n              href: \"/\",\n              children: \"MindDrops\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n              onClick: this.toggle,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              id: \"navbarCollapse\",\n              isOpen: this.state.isOpenMenu,\n              navbar: true,\n              children: /*#__PURE__*/_jsxDEV(ScrollspyNav, {\n                scrollTargetIds: targetId,\n                scrollDuration: \"800\",\n                headerBackground: \"true\",\n                activeNavClass: \"active\",\n                className: \"navbar-collapse\",\n                children: [/*#__PURE__*/_jsxDEV(Nav, {\n                  navbar: true,\n                  className: \"navbar-center\",\n                  id: \"mySidenav\",\n                  children: this.props.navItems.map((item, key) => /*#__PURE__*/_jsxDEV(NavItem, {\n                    className: item.navheading === \"Home\" ? \"active\" : \"\",\n                    children: /*#__PURE__*/_jsxDEV(NavLink, {\n                      href: \"#\" + item.idnm,\n                      children: [\" \", item.navheading]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, this)\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-button ms-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Nav, {\n                    navbar: true,\n                    className: \"navbar-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"none\",\n                        type: \"button\",\n                        className: \"btn btn-primary navbar-btn btn-rounded waves-effect waves-light\",\n                        children: \"Sign In\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this),\n        stickyOffset: -100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NavbarPage;","map":{"version":3,"sources":["/Users/xinchen/Documents/2. Learning/4. Cornell/1. Courses/Spring 2021/Startup Systems/minddrops/frontend/minddrops/src/components/Navbar/Navbar_Page.js"],"names":["React","Component","Navbar","Nav","NavbarBrand","NavbarToggler","NavItem","NavLink","Container","Collapse","Button","ScrollspyNav","useHistory","StickyHeader","NavbarPage","constructor","props","routeChange","path","history","push","toggle","setState","isOpenMenu","state","render","targetId","navItems","map","item","idnm","navClass","key","navheading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Collapse,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport ScrollspyNav from \"./scrollSpy\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//stickey header\r\nimport \"react-sticky-header/styles.css\";\r\nimport StickyHeader from \"react-sticky-header\";\r\n\r\nclass NavbarPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenMenu: false,\r\n    };\r\n  }\r\n\r\n  routeChange=()=> {\r\n    let path = 'login';\r\n    let history = useHistory();\r\n    history.push(path);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ isOpenMenu: !this.state.isOpenMenu });\r\n  };\r\n\r\n  render() {\r\n    //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\r\n    let targetId = this.props.navItems.map((item) => {\r\n      return item.idnm;\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <StickyHeader\r\n          header={\r\n            <Navbar\r\n              expand=\"lg\"\r\n              fixed=\"top\"\r\n              className={\r\n                \"navbar-custom sticky sticky-dark \" + this.props.navClass\r\n              }\r\n            >\r\n              <Container>\r\n                <NavbarBrand className=\"logo text-uppercase\" href=\"/\">\r\n                  MindDrops\r\n                </NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle}>\r\n                  <i className=\"mdi mdi-menu\"></i>\r\n                </NavbarToggler>\r\n\r\n                <Collapse\r\n                  id=\"navbarCollapse\"\r\n                  isOpen={this.state.isOpenMenu}\r\n                  navbar\r\n                >\r\n                  <ScrollspyNav\r\n                    scrollTargetIds={targetId}\r\n                    scrollDuration=\"800\"\r\n                    headerBackground=\"true\"\r\n                    activeNavClass=\"active\"\r\n                    className=\"navbar-collapse\"\r\n                  >\r\n                    <Nav navbar className=\"navbar-center\" id=\"mySidenav\">\r\n                      {this.props.navItems.map((item, key) => (\r\n                        <NavItem\r\n                          key={key}\r\n                          className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                        >\r\n                          <NavLink href={\"#\" + item.idnm}>\r\n                            {\" \"}\r\n                            {item.navheading}\r\n                          </NavLink>\r\n                        </NavItem>\r\n                      ))}\r\n                    </Nav>\r\n                    <div className=\"nav-button ms-auto\">\r\n                      <Nav navbar className=\"navbar-end\">\r\n                        <li>\r\n                          <Button \r\n                            color=\"none\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary navbar-btn btn-rounded waves-effect waves-light\"\r\n                          >\r\n                             Sign In\r\n                          </Button>\r\n                        </li>\r\n                      </Nav>\r\n                    </div>\r\n                    \r\n                  </ScrollspyNav>\r\n                </Collapse>\r\n              </Container>\r\n            </Navbar>\r\n          }\r\n          stickyOffset={-100}\r\n        ></StickyHeader>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;\r\n"]},"metadata":{},"sourceType":"module"}