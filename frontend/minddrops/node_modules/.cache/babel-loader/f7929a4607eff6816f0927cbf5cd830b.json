{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/xinchen/Documents/2. Learning/4. Cornell/1. Courses/Spring 2021/Startup Systems/minddrops/frontend/minddrops/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport routes from \"./routes\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { Navbar, Nav, NavbarBrand, NavbarToggler, NavItem, NavLink, Container, Collapse, Button } from \"reactstrap\"; // var firebaseConfig = {\n//   apiKey: \"AIzaSyB4Qaibwp_TvHO2qsjGPnaASAfWj-VAXPQ\",\n//   authDomain: \"minddrops-9c7e2.firebaseapp.com\",\n//   projectId: \"minddrops-9c7e2\",\n//   storageBucket: \"minddrops-9c7e2.appspot.com\",\n//   messagingSenderId: \"370552082892\",\n//   appId: \"1:370552082892:web:85993046b5aa9e5df14d69\",\n//   measurementId: \"G-FD43JVL9YW\"\n// };\n// firebase.initializeApp(firebaseConfig);\n// // Configure FirebaseUI.\n// const uiConfig = {\n//   // Popup signin flow rather than redirect flow.\n//   signInFlow: 'popup',\n//   // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n//   signInSuccessUrl: '/signedIn',\n//   // We will display Google and Facebook as auth providers.\n//   signInOptions: [\n//     firebase.auth.EmailAuthProvider.PROVIDER_ID,\n//   ],\n// };\n// function SignInScreen() {\n//   const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n//   // Listen to the Firebase Auth state and set the local state.\n//   useEffect(() => {\n//     const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n//       setIsSignedIn(!!user);\n//     });\n//     return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n//   }, []);\n//   if (!isSignedIn) {\n//     return (\n//       <div className=\"text-center mt-3\">\n//         <h1>MindDrops</h1>\n//         <p>Please sign-in:</p>\n//         <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n//       </div>\n//     );\n//   }\n//   return (\n//     <div className=\"text-center mt-3\">\n//       <h1>My App</h1>\n//       <p>Welcome {firebase.auth().currentUser.displayName}({firebase.auth().currentUser.email})! You are now signed-in!</p>\n//       <Button className=\"btn btn-primary navbar-btn btn-rounded waves-effect waves-light\"\n//       onClick={() => firebase.auth().signOut()}>\n//         Sign-out\n//       </Button>\n//     </div>\n//   );\n// }\n// export default SignInScreen\n// function SignedInComponent() {\n//   return (\n//     <section>\n//       <div>\n//       Hello! You are now signed in!  \n//       </div>\n//     </section>\n//   )\n// }\n// function App() {\n//   return (\n//     <React.Fragment>\n//       <Router>\n//         <Switch>\n//           {routes.map((route, idx) => (\n//             <Route path={route.path} component={route.component} key={idx} />\n//           ))}\n//         </Switch>\n//       </Router>\n//     </React.Fragment>\n//   );\n// }\n// export default App;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello from V2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/xinchen/Documents/2. Learning/4. Cornell/1. Courses/Spring 2021/Startup Systems/minddrops/frontend/minddrops/src/App.js"],"names":["React","useEffect","useState","StyledFirebaseAuth","firebase","routes","Route","Switch","BrowserRouter","Router","Navbar","Nav","NavbarBrand","NavbarToggler","NavItem","NavLink","Container","Collapse","Button","App","logo"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,kBAAvD;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,SAPF,EAQEC,QARF,EASEC,MATF,QAUO,YAVP,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQD,G;AAWT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport routes from \"./routes\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Container,\n  Collapse,\n  Button,\n} from \"reactstrap\";\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyB4Qaibwp_TvHO2qsjGPnaASAfWj-VAXPQ\",\n//   authDomain: \"minddrops-9c7e2.firebaseapp.com\",\n//   projectId: \"minddrops-9c7e2\",\n//   storageBucket: \"minddrops-9c7e2.appspot.com\",\n//   messagingSenderId: \"370552082892\",\n//   appId: \"1:370552082892:web:85993046b5aa9e5df14d69\",\n//   measurementId: \"G-FD43JVL9YW\"\n// };\n// firebase.initializeApp(firebaseConfig);\n\n// // Configure FirebaseUI.\n// const uiConfig = {\n//   // Popup signin flow rather than redirect flow.\n//   signInFlow: 'popup',\n//   // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n//   signInSuccessUrl: '/signedIn',\n//   // We will display Google and Facebook as auth providers.\n//   signInOptions: [\n//     firebase.auth.EmailAuthProvider.PROVIDER_ID,\n//   ],\n// };\n\n// function SignInScreen() {\n//   const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n//   // Listen to the Firebase Auth state and set the local state.\n//   useEffect(() => {\n//     const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n//       setIsSignedIn(!!user);\n//     });\n//     return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n//   }, []);\n\n//   if (!isSignedIn) {\n//     return (\n//       <div className=\"text-center mt-3\">\n//         <h1>MindDrops</h1>\n//         <p>Please sign-in:</p>\n//         <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n//       </div>\n//     );\n//   }\n//   return (\n//     <div className=\"text-center mt-3\">\n//       <h1>My App</h1>\n//       <p>Welcome {firebase.auth().currentUser.displayName}({firebase.auth().currentUser.email})! You are now signed-in!</p>\n//       <Button className=\"btn btn-primary navbar-btn btn-rounded waves-effect waves-light\"\n//       onClick={() => firebase.auth().signOut()}>\n//         Sign-out\n//       </Button>\n//     </div>\n//   );\n// }\n// export default SignInScreen\n\n\n// function SignedInComponent() {\n//   return (\n//     <section>\n//       <div>\n//       Hello! You are now signed in!  \n//       </div>\n//     </section>\n//   )\n// }\n\n// function App() {\n//   return (\n//     <React.Fragment>\n//       <Router>\n//         <Switch>\n//           {routes.map((route, idx) => (\n//             <Route path={route.path} component={route.component} key={idx} />\n//           ))}\n//         </Switch>\n//       </Router>\n//     </React.Fragment>\n//   );\n// }\n\n// export default App;\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Hello from V2</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}